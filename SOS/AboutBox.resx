<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAQAAAAAABoBgAANgAAACAgEAAAAAAA6AIAAJ4GAAAQEBAAAAAAACgBAACGCQAAKAAAADAA
        AABgAAAAAQAEAAAAAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAO7AAAAAAAAAzQAA0AAAAAAAAAAAAAAALs7kAA0ADQAADNAADQAAAAAAA
        AAAAAACIuzuQADQAMAAAAAADNAAwAAAAAAAAAAAAiLMzAAAAB2d3d3dgAAA0AAAAAAAAAAAAAIgAAHd2
        d3d3djd3d3ADQAAAAAAAAAADNAAHdnd3d3Y3d3N2d3dwADAAAACLkAAAAGd3czdnd//zv///d2d3cDQA
        AACLO5AAd3d2//8z+/////v///92dwQAAACLu7uYZ38z/7////+//zP/s///d2ADAACDs7O4d/+//7u7
        s7m7u7///zO/N3cDAACLu7u4e/+bu7u7m7u7u5u7+///83ZwAACLs7iIubu7u7m7u7u5u7u7ub//s/dw
        QAAIuIAIu7u7m7u7u5u7u7APu7u///92AAAIgAAAi5uzu7ubs7u7kA/wu5uz+/N3AwAAAAAAi7u5u7u7
        ubu7D/uwu7u5v/O3cAAAAAAAmLu7u5O7u7uY/7O7C7m7u//3cAAAAAibu4m7u7u5u7uP87s7C7u7u7/z
        cAAAAAi7O7izubu7s7j/uzuzsLuzubvzYAAAAIk7uICLu7u7m7j/O7O7MLubu7v/cAAAAIu4gAAIu7m7
        u4/7u7s7uLsRG7m/cAAAAIiAAAADiLu7u4/zuzu7i7G7uLu7cAAAAAAAAAA0AIibs7iIiIiIuxs0S4ub
        AwAAAAAAAAAAADSIubu7u7m7uxuAS4u7AwAAAAAAAAAAA0AAiLuTu7u7kxs4O4OwOAAAAAAAAAAAAAAD
        QIi7ubu7u7G7uLsDgAAAAAAAAAAAAAAAAAOIu7O5u7sRGbA4AAAAAAAAAAAAAAAAADQwiIu7u7ubsAAA
        AAAAAAAAAAAAAAAAA0AAADiIubuwAAAAAAAAAAAAAAAAAAAAAAAAA0AAiIiAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD/3/////8AAP8P/////wAA/g//HP//AAD8BmeOf/8AAPwD
        MAA3/wAA/wEAABP/AAD/wAAAAf8AAJ4AAAABfwAABwAAAAA/AAAAAAAAAD8AAAAAAAAALwAAAAAAAAAP
        AAAAAAAAAA8AAAAAAAAABwAAhgAAAAAHAACfAAAAAAMAAP8AAAAAAwAA/AAAAAADAAD4AAAAAAMAAPgA
        AAAAAwAA8BAAAAADAADweAAAAAMAAPH4AAAAAwAA//MAAAADAAD//wAAAAMAAP/+cAAAAwAA///kAAAH
        AAD///4AAA8AAP///EAAfwAA///58AH/AAD////nB/8AAP////+f/wAA/////z//AAD///////8AAP//
        /////wAA////////AAAoAAAAIAAAAEAAAAABAAQAAAAAAIACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAADQAAAAAAAAAAAAJsAAANAAD
        QAAAAAAAAAALi5sAAAAAAAADAAAAAAAAiLO5AAiIiIiAAEADAAAAAACIAIg3dzd3aIgAA0AAAAA0AIh3
        c3Zzd3d2iABDAAAAAwh3dv////s3d3eIAwCJAACHZzP/P78/8/9nd4AAiLkId///+/P///v//3eAQIu7
        h///u7u7uz//8/+/eACLuI+5u7m7Obuwu78/83gAiLuLu7O7u7uwDwu7+/83gIuIibu5uzm7D/sLu7v/
        t4CIAAizu7u7sP87sLO5u/+AAAAAibuzu7D7s7C7u7O/gAAAk7g7u7uP87uLsRG7u4AACbiAibubiIiI
        gxtEi7MAAIuIADg7O7u7O7sYBIubAACIAANAiLs5u7m7GIuLsDAAAAAAAAOIu7O7u7ERuwMwAAAAAAA0
        AIi5uzm7uwAzAAAAAAAAAAADiIu7uwAAAAAAAAAAAAAANAAIiIgAAAAAAAAAAAAAAAAAADQAAAAAAAAA
        AAAAAAAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////nnP//g8
        5//wGAb/8AAAb/wAACfyAAADOAAAAwgAAAMAAAABAAAAAQAAAAEAAAAAAAAAADgAAADwAAAA4AAAAMEA
        AAHDAAABzkAAAf/gAAH/zAAD//4AP//84P////P////n//////8oAAAAEAAAACAAAAABAAQAAAAAAMAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAALkANAMAAAAAi4AAAE
        AwAAAABnd2ADAAgAd3dnd3BAiYdv+/+/ZwCLj/87uP//cIiPO7mLi/vwgIu7uLu4i/AACLO4iDCLsAAJ
        iLubs5sAALgAiLO7AAAIgANAiIhAAAAAAAAwAwAA//8AAP//AADl/wAAwl8AAOALAADwAwAAAAEAAAAB
        AAAAAAAAAAAAAEAAAADgAAAAwAEAAIwDAACZBwAA/28AAA==
</value>
  </data>
</root>